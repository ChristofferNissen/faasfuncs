arch: arm64
os: linux
dist: xenial
language: ruby
services:
  - docker

before_install: 
  # check archicture. .com does not support arm atm.
  - dpkg --print-architecture
  
  # installing newer docker
  - sudo apt-get update
  
  - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD";
  
  # installing the faas-cli
  - curl -sSL https://cli.openfaas.com | sudo sh

script:
  - echo $OPENFAAS_PASS | faas-cli login --username admin --password-stdin -g https://gateway.christoffernissen.me
  
  ### CSTEST ###
  
  # # Build
  # - faas-cli build -f cstest-func/cstest.yml
  
  # # Test
  # # testing tbc later..
  
  # # Deploy
  # - faas-cli push -f cstest-func/cstest.yml
  # - faas-cli deploy -f cstest-func/cstest.yml

  ### IOT ###
  
  # set secrets
  # - echo -n $INFLUX_USER | faas-cli secret create influx-user -g https://gateway.christoffernissen.me
  # - echo -n $INFLUX_PASS | faas-cli secret create influx-pass -g https://gateway.christoffernissen.me
  
  # - faas-cli up -f iot/iot-assignment2.yml --env write_debug=true
  # - faas-cli up -f iot/iot-ml-func.yml --env write_debug=true
  
  # keep alive script
  - 
    function write_visual_bells() {
      while true; do
        echo "Keep alive... \n"
        sleep 10
      done
    }
    write_visual_bells&
    
    travis_wait 30 faas-cli up -f iot/iot-ml-func.yml

  # - docker build -f iot/helper/Dockerfile iot/helper -t stifstof/iotmqttinterceptor
  # - docker push stifstof/iotmqttinterceptor:latest

  # kubectl run --image=stifstof/iotmqttinterceptor iotmqttinterceptor-app --env="mqtt-pass="
  
